name: CI de la app

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        servicio:
          - Modulo Basica/backendBasica
          - Modulo Basica/frontEndBasica
          - Modulo Media/backendMedia
          - Modulo Media/frontEndMedia
          - Modulo Parvularia/backendParvularia
          - Modulo Parvularia/frontEndParvularia
          - Modulo Sostenedor/backendSostenedor
          - Modulo Sostenedor/frontEndSostenedor

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Configurar Java 21
        if: contains(matrix.servicio, 'backend')
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configurar Node.js
        if: contains(matrix.servicio, 'frontend')
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Login en DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin https://registry.hub.docker.com/v2/

      - name: Verificar existencia de mvnw y entrar al directorio correcto
        run: |
          cd "${{ matrix.servicio }}"
          if [ ! -f "mvnw" ]; then
            echo "mvnw no encontrado en ${{ matrix.servicio }}"
            exit 1
          fi
  
        # Configurar permisos para mvnw
      - name: Configurar permisos para mvnw
        run: chmod +x mvnw

      - name: Instalar dependencias y compilar
        run: |
          cd "${{ matrix.servicio }}"

          if [[ "${{ matrix.servicio }}" == *backend* ]]; then
            ./mvnw install
            ./mvnw test
          else
            npm install
            npm run test 
            npm run build 
          fi

      - name: Construir imagen Docker
        run: |
          nombre=$(echo "${{ matrix.servicio }}" | sed 's|/|-|g' | tr '[:upper:]' '[:lower:]')
          docker build -t miusuario/$nombre:latest -t miusuario/$nombre:${{ github.sha }} ${{ matrix.servicio }}

      - name: Subir imagen a DockerHub
        run: |
          nombre=$(echo "${{ matrix.servicio }}" | sed 's|/|-|g' | tr '[:upper:]' '[:lower:]')
          docker push miusuario/$nombre:latest
          docker push miusuario/$nombre:${{ github.sha }}
